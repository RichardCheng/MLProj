Part 1b)
(row = c; column = digit)
100.00 97.71 99.22 99.48 99.20 99.74 99.74 98.93 94.75 96.83
100.00 97.71 99.22 99.22 99.20 100.00 100.00 99.20 95.28 97.88
100.00 97.71 99.22 98.96 99.20 100.00 100.00 99.20 95.80 98.41
100.00 97.96 99.22 98.96 99.46 100.00 100.00 99.20 95.54 98.15
100.00 97.96 99.22 98.96 99.73 100.00 100.00 98.93 95.54 97.88
100.00 97.71 98.96 98.96 99.46 99.48 99.48 99.20 95.54 98.15
100.00 97.46 98.96 98.96 98.93 100.00 99.22 99.20 96.06 98.15

The best model (value of C) I picked was: (for each digit)
0.0001, 0.005, 0.0001, 0.0001, 0.01, 0.0005, 0.0005, 0.0005, 0.1, 0.001

I chose using the following method:
First find the C that maximizes accuracy on the validation set.
For ties, choose the smallest C (this will hopefully reduce overfitting)

accuracy rate is 1582/1797=0.880356
type A error rate is 171/1797=0.095159 (this is when best classification is negative)
type B error rate is 44/1797=0.024485 (this is when classification is positive, but classification is incorrect)

Sample commands:

import os, shutil, subprocess, sys, re;
os.chdir('D:\\Documents\\Dropbox\\MLProj\\p4\\')
carray = [0.0001,0.0005,0.001,0.005,0.01,0.05,0.1]; 
bestmodel = [0, 3, 0, 0, 4, 1, 1, 1, 6, 2];
for j in range(0, 10): 
    c = str(carray[bestmodel[j]])
    j = str(j)
    s2 = subprocess.check_output('svm_classify.exe "D:\Documents\Dropbox\MLProj\p4\digits\digits.test" "D:\Documents\Dropbox\MLProj\p4\digits\model/'+j+'/digitsmod'+j+'_'+c+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\out\digitsout'+j+'.test"')

import os, shutil, subprocess, sys, re;
os.chdir('D:\\Documents\\Dropbox\\MLProj\\p4\\')
for j in range(0,10):
    os.mkdir('D:\\Documents\\Dropbox\\MLProj\\p4\\digits\\model\\'+str(j)+"\\")
    os.mkdir('D:\\Documents\\Dropbox\\MLProj\\p4\\digits\\out\\'+str(j)+"\\")
stuff = re.compile(".*(Accuracy on test set: )(.*)% \\(.*")  
for i in (0.0001,0.0005,0.001,0.005,0.01,0.05,0.1):
    for j in range(0, 10): 
        i = str(i)
        j = str(j)
        s1 = subprocess.check_output('svm_learn.exe -c '+i+' "D:\Documents\Dropbox\MLProj\p4\digits\digits'+j+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\model/'+j+'/digitsmod'+j+'_'+i+'.train"')
        s2 = subprocess.check_output('svm_classify.exe "D:\Documents\Dropbox\MLProj\p4\digits\digits'+j+'.val" "D:\Documents\Dropbox\MLProj\p4\digits\model/'+j+'/digitsmod'+j+'_'+i+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\out/'+j+'/digitsout'+j+'_'+i+'.val"')
        stemp = s2.split('\n')
        for s in stemp:
            res = stuff.match(s)
            if res:
                sys.stdout.write("%s " % res.group(2))
                break
    sys.stdout.write("\n")

[valuemax, indexmax] = max(out, [], 2); 
error_a = 0;
error_b = 0; 
for i = 1 : leng
    if valuemax(i) < 0
        error_a = error_a + 1; 
    elseif indexmax(i) ~= digitsout(i)
        error_b = error_b + 1; 
    end
end
error = error_a + error_b; 

-----------------------------------------------------------------

Part 1c)
(row = c; column = digit)

d = 2:
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47
100.00 99.75 100.00 98.96 99.46 100.00 99.74 99.46 98.16 99.47

d = 3:
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47
100.00 99.75 100.00 99.22 99.73 99.74 100.00 99.46 98.43 99.47

d = 4:
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.47

d = 5:
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21
100.00 99.75 100.00 99.22 100.00 100.00 100.00 99.46 98.69 99.21

accuracy rate is 1730/1797=0.962716
type A error rate is 50/1797=0.027824 (this is when best classification is negative)
type B error rate is 17/1797=0.009460 (this is when classification is positive, but classification is incorrect)

Sample commands:

import os, shutil, subprocess, sys, re;
os.chdir('D:\\Documents\\Dropbox\\MLProj\\p4\\')
for j in range(0,10):
    os.mkdir('D:\\Documents\\Dropbox\\MLProj\\p4\\digits\\polymodel\\'+str(j)+"\\")
    os.mkdir('D:\\Documents\\Dropbox\\MLProj\\p4\\digits\\polyout\\'+str(j)+"\\")
stuff = re.compile(".*(Accuracy on test set: )(.*)% \\(.*")
for d in (2, 3, 4, 5): 
    d = str(d)
    sys.stdout.write("\nd = " + d + ":\n"); 
    for i in (0.0001,0.0005,0.001,0.005,0.01,0.05,0.1):
        for j in range(0, 10): 
            i = str(i)
            j = str(j)
            s1 = subprocess.check_output('svm_learn.exe -c '+i+' -t 1 -d '+d+' "D:\Documents\Dropbox\MLProj\p4\digits\digits'+j+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\polymodel/'+j+'/digitsmod'+j+'_'+d+'_'+i+'.train"')
            s2 = subprocess.check_output('svm_classify.exe "D:\Documents\Dropbox\MLProj\p4\digits\digits'+j+'.val" "D:\Documents\Dropbox\MLProj\p4\digits\polymodel/'+j+'/digitsmod'+j+'_'+d+'_'+i+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\polyout/'+j+'/digitsout'+j+'_'+d+'_'+i+'.val"')
            stemp = s2.split('\n')
            for s in stemp:
                res = stuff.match(s)
                if res:
                    sys.stdout.write("%s " % res.group(2))
                    break
        sys.stdout.write("\n")

import os, shutil, subprocess, sys, re;
os.chdir('D:\\Documents\\Dropbox\\MLProj\\p4\\')
d = '4'
bestmodel = [0, 3, 0, 0, 4, 1, 1, 1, 6, 2];
carray = [0.0001,0.0005,0.001,0.005,0.01,0.05,0.1];   
for j in range(0, 10): 
    c = str(carray[bestmodel[j]])
    j = str(j)
    s2 = subprocess.check_output('svm_classify.exe "D:\Documents\Dropbox\MLProj\p4\digits\digits.test" "D:\Documents\Dropbox\MLProj\p4\digits\polymodel/'+j+'/digitsmod'+j+'_'+d+'_'+c+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\polyout\digitsout'+j+'.test"')

[valuemax, indexmax] = max(polyout, [], 2); 
error_a = 0;
error_b = 0; 
for i = 1 : leng
    if valuemax(i) < 0
        error_a = error_a + 1; 
    elseif indexmax(i) ~= digitsout(i)
        error_b = error_b + 1; 
    end
end
error = error_a + error_b; 

-----------------------------------------------------------------

Part 1d)
Reading model...done.
Reading test examples... (1797 examples) done.
Classifying test examples...done
Runtime (without IO) in cpu-seconds: 0.01
Average loss on test set: 7.7908
Zero/one-error on test set: 7.79% (1657 correct, 140 incorrect, 1797 total)

Sample Commands:

import os, shutil, subprocess, sys, re;
os.chdir('D:\\Documents\\Dropbox\\MLProj\\p4\\')    
for i in ("0.00001", "0.00005", "0.0001", "0.0005", "0.001", "0.005", "0.01", "0.05", "0.1", "0.5", "1", "5"):  
    s1 = subprocess.check_output('svm_multiclass_learn.exe -c '+i+' "D:\Documents\Dropbox\MLProj\p4\digits\digits.train" "D:\Documents\Dropbox\MLProj\p4\digits\multimodel/digitsmod_c'+i+'.train"')
    s2 = subprocess.check_output('svm_multiclass_classify.exe "D:\Documents\Dropbox\MLProj\p4\digits\digits.val" "D:\Documents\Dropbox\MLProj\p4\digits\multimodel/digitsmod_c'+i+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\multiout/digitsout_c'+i+'.val"')
    sys.stdout.write("%s\n" % s2)
    
import os, shutil, subprocess, sys, re;
os.chdir('D:\\Documents\\Dropbox\\MLProj\\p4\\')
best_c = "5";
s2 = subprocess.check_output('svm_multiclass_classify.exe "D:\Documents\Dropbox\MLProj\p4\digits\digits.test" "D:\Documents\Dropbox\MLProj\p4\digits\multimodel/digitsmod_c'+best_c+'.train" "D:\Documents\Dropbox\MLProj\p4\digits\multiout/digitsout_c'+best_c+'.val"')
sys.stdout.write("%s\n" % s2)  